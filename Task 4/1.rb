#Вам необходимо реализовать в модуле Mtn класс Healthcheck, который будет проверять сервера на доступность.

#Сервера уже реализованы, вам достаточно знать, что это некий объект, у которого есть метод #status, работающий следующим образом: - возвращает true, если сервер доступен и отвечает - возвращает ошибку Mtn::Status400 или Mtn::Status500, если сервер доступен, но приболел - возвращает ошибку Mtn::TimeoutError, если сервер недоступен в принципе

#Все ошибки отнаследованы от StandardError.

#Каждый сервис вашего Healthcheck должен принимать сервер при инициализации и иметь как минимум метод #check!, который будет проверять статус сервера. При этом:

#    сервис ведет подсчет количества проверок каждого сервиса и их положительных\отрицательных статусов (смотри пример ниже)
#    в случае, когда сервер доступен, возвращает строку вида: "OK (количество_положительных_ответов/общее_количество_проверок_этого_сервера")
#    в случае, когда сервер недоступен, возвращает строку вида:
#    "КЛАСС_ПОСЛЕДНЕЙ_ОШИБКИ_КАПСЛОКОМ (количество_положительных_ответов/общее_количество_проверок_этого_сервера)"
#    если же сломался сам сервис, возвращает просто строку:


module Mtn
  class Healthcheck
    def initialize(value)
      @server = value
      @OK = 0
      @all = 0
    end

    def check!
      status = @server.status
      if status.equal?(true)
        "OK (#{@OK += 1}/#{@all += 1})"
      else
        'FAIL'
      end
    rescue Mtn::Status400, Mtn::Status500, Mtn::TimeoutError => exc
      @all += 1
      "#{exc.to_s.upcase} (#{@OK}/#{@all})"
    rescue
      'FAIL'
    end
  end
end
